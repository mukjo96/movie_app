{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Searchbar.js","components/Navigation.js","components/MovieDetail.js","routes/Detail.js","routes/Upcoming.js","routes/TopRateds.js","routes/Search.js","App.js","index.js"],"names":["About","className","Movie","movie_id","title_kr","title_original","poster_path","vote_average","vote_count","genre_ids","release_date","summary","to","pathname","state","src","alt","title","substr","length","icon","faStar","TopRateds","useState","currentPage","setCurrentPage","totalPage","setTotalPage","movies","setMovies","isLoading","setIsLoading","useEffect","getTopRated","a","axios","get","response","data","results","total_results","console","log","total_pages","total","current","showPrevNextJumpers","style","marginTop","pageSize","onChange","page","map","movie","id","original_title","overview","Searchbar","text","onFormSubmit","e","preventDefault","props","onSubmit","event","value","target","setState","this","type","placeholder","Component","Navigation","isOpen","handleClick","open","faFilm","faTwitter","faFacebook","menuClicked","bind","width","height","color","position","React","MovieDetail","key","genres","runtime","production_companies","production_countries","homepage","backdrop_path","href","genre","index","name","faUser","country","s","company","logo_path","toImg","Detail","details","getMovieDetails","location","history","undefined","push","Upcoming","Search","onSearchSubmit","params","query","App","path","exact","component","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.500c08fe.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./About.css\";\n\nfunction About() {\n  return (\n    <div className=\"about__container\">\n      <span>아직</span>\n      <span>준비중</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport PropTypes from \"prop-types\";\nimport Media from \"react-media\";\nimport \"./Movie.css\";\nimport { faGrinStars } from \"@fortawesome/free-regular-svg-icons\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Movie({\n  movie_id,\n  title_kr,\n  title_original,\n  poster_path,\n  vote_average,\n  vote_count,\n  genre_ids,\n  release_date,\n  summary,\n}) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: `/movie/${movie_id}`,\n          state: {\n            movie_id,\n            title_kr,\n            title_original,\n            poster_path,\n            vote_average,\n            vote_count,\n            genre_ids,\n            release_date,\n            summary,\n          },\n        }}\n      >\n        <div className=\"movieCard\">\n          <div className=\"movie-poster\">\n            <div>\n              <img\n                className=\"movieimg\"\n                src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\n                alt={title_original}\n                title={title_original}\n              />\n            </div>\n          </div>\n          <div className=\"mv-inf\">\n            <div className=\"mv-inf-top\">\n              <div className=\"mv-inf-title\">{title_kr}</div>\n            </div>\n            <div>\n              <hr />\n            </div>\n            <div className=\"mv-inf-btm\">\n              <div className=\"mv-inf-overview\">\n                {summary.substr(0, 70)}\n                {summary.length > 140 ? \"...\" : \"\"}\n              </div>\n              <div className=\"mv-inf-vote-avg\">\n                <FontAwesomeIcon className=\"star\" icon={faStar} />\n                {vote_average}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n/*\nMovie.propTypes = {\n  rnum: PropTypes.number.isRequired,\n  rank: PropTypes.number.isRequired,\n  rankInten: PropTypes.number.isRequired,\n  movieCd: PropTypes.number.isRequired,\n  movieNm: PropTypes.string.isRequired,\n  rankOldAndNew: PropTypes.string.isRequired,\n  audiAcc: PropTypes.number.isRequired,\n};\n*/\n\nexport default Movie;\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction findGenre(a) {\n  if (a === 28) {\n    return \"액션\";\n  } else if (a === 12) {\n    return \"모험\";\n  } else if (a === 16) {\n    return \"애니메이션\";\n  } else if (a === 35) {\n    return \"코미디\";\n  } else if (a === 80) {\n    return \"범죄\";\n  } else if (a === 99) {\n    return \"다큐멘터리\";\n  } else if (a === 18) {\n    return \"드라마\";\n  } else if (a === 10751) {\n    return \"가족\";\n  } else if (a === 14) {\n    return \"판타지\";\n  } else if (a === 6) {\n    return \"역사\";\n  } else if (a === 27) {\n    return \"공포\";\n  } else if (a === 10402) {\n    return \"음악\";\n  } else if (a === 9648) {\n    return \"미스터리\";\n  } else if (a === 10749) {\n    return \"로맨스\";\n  } else if (a === 878) {\n    return \"SF\";\n  } else if (a === 10770) {\n    return \"TV 영화\";\n  } else if (a === 53) {\n    return \"스릴러\";\n  } else if (a === 10752) {\n    return \"전쟁\";\n  } else if (a === 37) {\n    return \"서부\";\n  } else {\n    return \"\";\n  }\n}\n\nvar genres = [\n  {\n    id: 28,\n    name: \"액션\",\n  },\n  {\n    id: 12,\n    name: \"모험\",\n  },\n  {\n    id: 16,\n    name: \"애니메이션\",\n  },\n  {\n    id: 35,\n    name: \"코미디\",\n  },\n  {\n    id: 80,\n    name: \"범죄\",\n  },\n  {\n    id: 99,\n    name: \"다큐멘터리\",\n  },\n  {\n    id: 18,\n    name: \"드라마\",\n  },\n  {\n    id: 10751,\n    name: \"가족\",\n  },\n  {\n    id: 14,\n    name: \"판타지\",\n  },\n  {\n    id: 36,\n    name: \"역사\",\n  },\n  {\n    id: 27,\n    name: \"공포\",\n  },\n  {\n    id: 10402,\n    name: \"음악\",\n  },\n  {\n    id: 9648,\n    name: \"미스터리\",\n  },\n  {\n    id: 10749,\n    name: \"로맨스\",\n  },\n  {\n    id: 878,\n    name: \"SF\",\n  },\n  {\n    id: 10770,\n    name: \"TV 영화\",\n  },\n  {\n    id: 53,\n    name: \"스릴러\",\n  },\n  {\n    id: 10752,\n    name: \"전쟁\",\n  },\n  {\n    id: 37,\n    name: \"서부\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\n\nconst TopRateds = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(20);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTopRated();\n  }, [currentPage]);\n\n  const getTopRated = async () => {\n    let response = await axios.get(\n      `https://api.themoviedb.org/3/movie/now_playing?sort_by=vote_average.desc&api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=${currentPage}&region=KR`\n    );\n\n    setMovies(response.data.results);\n    setIsLoading(false);\n    setTotalPage(response.data.total_results);\n    console.log(response.data.total_pages);\n  };\n\n  return (\n    <body className=\"container\">\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={totalPage}\n          current={currentPage}\n          showPrevNextJumpers={true}\n          style={{ marginTop: \"2%\" }}\n          pageSize={20}\n          onChange={(page) => setCurrentPage(page)}\n        />\n      </div>\n\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map((movie) => (\n            <Movie\n              movie_id={movie.id}\n              title_original={movie.original_title}\n              summary={movie.overview}\n              poster_path={movie.poster_path}\n              title_kr={movie.title}\n              vote_average={movie.vote_average}\n              vote_count={movie.vote_count}\n              genre_ids={movie.genre_ids}\n              release_date={movie.release_date}\n            />\n          ))}\n        </div>\n      )}\n    </body>\n  );\n};\n\nexport default TopRateds;\n","import React, { Component } from \"react\";\nimport \"./Searchbar.css\";\n\nclass Searchbar extends Component {\n  state = { text: \"\" };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.text);\n  };\n\n  onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ text: value });\n  };\n\n  render() {\n    return (\n      <div className=\"searchbar\">\n        <form onSubmit={this.onFormSubmit}>\n          <input\n            className=\"search__input\"\n            value={this.state.text}\n            type=\"text\"\n            onChange={this.onChange}\n            placeholder=\"Search\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faFilm } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFacebook, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport HamburgerMenu from \"react-hamburger-menu\";\nimport Searchbar from \"./Searchbar.js\";\n\nclass Navigation extends React.Component {\n  state = {\n    isOpen: false,\n    text: \"\",\n  };\n  handleClick = () => this.setState({ open: !this.state.open });\n  onChange = (event) => {\n    console.log(event.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"nav\">\n        <body>\n          <nav className=\"navbar\">\n            <div className=\"navbar__logo\">\n              <FontAwesomeIcon className=\"film\" icon={faFilm} />\n              <a>\n                <Link to=\"/\">Movie App</Link>\n              </a>\n            </div>\n            <ul\n              className={\"navbar__menu\" + (this.state.open ? \"show\" : \"hidden\")}\n            >\n              <li>\n                <a>\n                  <Link to=\"/\">Now Playing</Link>\n                </a>\n              </li>\n              <li>\n                <a>\n                  <Link to=\"/upcoming\">Up Coming</Link>\n                </a>\n              </li>\n              <li>\n                <a>\n                  <Link to=\"/toprateds\">Top Rated</Link>\n                </a>\n              </li>\n              <li>\n                <a>\n                  <Link to=\"/search\">Search</Link>\n                </a>\n              </li>\n              {/* <li>\n                <a>\n                  <Link to=\"/about\">About</Link>\n                </a>\n              </li> */}\n            </ul>\n\n            <ul\n              className={\n                \"navbar__icons\" + (this.state.open ? \"show\" : \"hidden\")\n              }\n            >\n              <li>\n                <FontAwesomeIcon icon={faTwitter} />\n              </li>\n              <li>\n                <FontAwesomeIcon icon={faFacebook} />\n              </li>\n            </ul>\n            <section className=\"navbar__toogleBtn\">\n              <HamburgerMenu\n                isOpen={this.state.open}\n                menuClicked={this.handleClick.bind(this)}\n                width={18}\n                height={15}\n                color=\"white\"\n                position=\"absolute\"\n              />\n            </section>\n          </nav>\n        </body>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./MovieDetail.css\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MovieDetail({\n  key,\n  title,\n  original_title,\n  genres,\n  poster_path,\n  release_date,\n  runtime,\n  vote_average,\n  vote_count,\n  production_companies,\n  production_countries,\n  overview,\n  homepage,\n  backdrop_path,\n}) {\n  return (\n    <div className=\"movieDetail\">\n      <img\n        src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\n        alt={original_title}\n        title={original_title}\n      />\n      <div className=\"movieDetail__data\">\n        <div className=\"movieDetail__title\">\n          <a href={homepage}>\n            <h1>{title}</h1>\n          </a>\n          <h4>{original_title}</h4>\n        </div>\n        <ul className=\"movieDetail__genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres__genre\">\n              {genre.name}\n            </li>\n          ))}\n        </ul>\n        <div className=\"movieDetail__details\">\n          <h5 className=\"movieDetail__prdtYear\">개봉일자 : {release_date}</h5>\n          <h5>상영시간 : {runtime}분</h5>\n          <h5>\n            관객평점 : <FontAwesomeIcon className=\"star\" icon={faStar} />\n            {vote_average} ({\" \"}\n            <FontAwesomeIcon className=\"people\" icon={faUser} />\n            {\" \" + vote_count} )\n          </h5>\n          <ul className=\"movieDetail__nation\">\n            {production_countries.map((country, index) => (\n              <li key={index} className=\"countries__country\">\n                <h5>{nationtoKR(country.name)}</h5>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"movieDetail__summary\">\n          <p>{overview}</p>\n        </div>\n        <div className=\"movieDetail__production\">\n          <h4>제작사</h4>\n          <ul className=\"movieDetail__companies\">\n            {production_companies.map((company, index) => (\n              <li key={index} className=\"companies__company\">\n                {toImg(company)}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n/*\nMovie.propTypes = {\n  rnum: PropTypes.number.isRequired,\n  rank: PropTypes.number.isRequired,\n  rankInten: PropTypes.number.isRequired,\n  movieCd: PropTypes.number.isRequired,\n  movieNm: PropTypes.string.isRequired,\n  rankOldAndNew: PropTypes.string.isRequired,\n  audiAcc: PropTypes.number.isRequired,\n};\n*/\n\nexport default MovieDetail;\n\nfunction toImg(s) {\n  if (s.logo_path != null) {\n    return (\n      <img\n        src={\"https://image.tmdb.org/t/p/w500\" + s.logo_path}\n        alt={s.name}\n        title={s.name}\n      />\n    );\n  }\n}\n\nfunction nationtoKR(s) {\n  if (s === \"United States of America\") return \"미국\";\n  else if (s === \"China\") return \"중국\";\n  else if (s === \"Bulgaria\") return \"불가리아\";\n  else if (s === \"Estonia\") return \"에스토니아\";\n  else if (s === \"United Kingdom\") return \"영국\";\n  else if (s === \"Japan\") return \"일본\";\n  else if (s === \"Belgium\") return \"벨기에\";\n  else if (s === \"France\") return \"프랑스\";\n  else if (s === \"South Korea\") return \"한국\";\n  else if (s === \"Colombia\") return \"콜롬비아\";\n  else if (s === \"Netherlands\") return \"네덜란드\";\n  else if (s === \"Germany\") return \"독일\";\n  else return s;\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport MovieDetail from \"../components/MovieDetail\";\n\nclass Detail extends React.Component {\n  state = {\n    details: {},\n    isLoading: true,\n  };\n\n  getMovieDetails = async () => {\n    const { location } = this.props;\n    const { data } = await axios.get(\n      \"https://api.themoviedb.org/3/movie/\" +\n        location.state.movie_id +\n        \"?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR\"\n    );\n    this.setState({ details: data, isLoading: false });\n  };\n\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    } else {\n      this.getMovieDetails();\n    }\n  }\n\n  render() {\n    const { isLoading, details } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"details\">\n            <MovieDetail\n              key={details.id}\n              title={details.title} // 순위\n              original_title={details.original_title} // 순위 증감\n              release_date={details.release_date} // 제목\n              poster_path={details.poster_path}\n              runtime={details.runtime} // 신규 진입 여부\n              genres={details.genres}\n              production_countries={details.production_countries} // 영화 코드\n              vote_average={details.vote_average} // 관객 누적 수\n              vote_count={details.vote_count}\n              production_companies={details.production_companies}\n              overview={details.overview}\n              homepage={details.homepage}\n              backdrop_path={details.backdrop_path}\n            />\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Detail;\n","import React, { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\n\nconst Upcoming = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(20);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTopRated();\n  }, [currentPage]);\n\n  const getTopRated = async () => {\n    let response = await axios.get(\n      `https://api.themoviedb.org/3/movie/upcoming?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=${currentPage}&region=KR`\n    );\n\n    setMovies(response.data.results);\n    setIsLoading(false);\n    setTotalPage(response.data.total_results);\n    console.log(response.data.total_pages);\n  };\n\n  return (\n    <body className=\"container\">\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={totalPage}\n          current={currentPage}\n          showPrevNextJumpers={true}\n          style={{ marginTop: \"2%\" }}\n          pageSize={20}\n          onChange={(page) => setCurrentPage(page)}\n        />\n      </div>\n\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map((movie) => (\n            <Movie\n              movie_id={movie.id}\n              title_original={movie.original_title}\n              summary={movie.overview}\n              poster_path={movie.poster_path}\n              title_kr={movie.title}\n              vote_average={movie.vote_average}\n              vote_count={movie.vote_count}\n              genre_ids={movie.genre_ids}\n              release_date={movie.release_date}\n            />\n          ))}\n        </div>\n      )}\n    </body>\n  );\n};\n\nexport default Upcoming;\n","import React, { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\n\nconst TopRateds = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(20);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTopRated();\n  }, [currentPage]);\n\n  const getTopRated = async () => {\n    let response = await axios.get(\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=${currentPage}&region=KR`\n    );\n\n    setMovies(response.data.results);\n    setIsLoading(false);\n    setTotalPage(response.data.total_results);\n    console.log(response.data.total_pages);\n  };\n\n  return (\n    <body className=\"container\">\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={totalPage}\n          current={currentPage}\n          showPrevNextJumpers={true}\n          style={{ marginTop: \"2%\" }}\n          pageSize={20}\n          onChange={(page) => setCurrentPage(page)}\n        />\n      </div>\n\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map((movie) => (\n            <Movie\n              movie_id={movie.id}\n              title_original={movie.original_title}\n              summary={movie.overview}\n              poster_path={movie.poster_path}\n              title_kr={movie.title}\n              vote_average={movie.vote_average}\n              vote_count={movie.vote_count}\n              genre_ids={movie.genre_ids}\n              release_date={movie.release_date}\n            />\n          ))}\n        </div>\n      )}\n    </body>\n  );\n};\n\nexport default TopRateds;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\nimport Searchbar from \"../components/Searchbar.js\";\nclass Search extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  onSearchSubmit = async (text) => {\n    const {\n      data: { results },\n    } = await axios.get(\n      `\n        https://api.themoviedb.org/3/search/movie?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=1&include_adult=false`,\n      { params: { query: text } }\n    );\n    this.setState({ movies: results, isLoading: false });\n  };\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <body className=\"container\">\n        <Searchbar onSubmit={this.onSearchSubmit} />\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">검색어를 입력하세요</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                movie_id={movie.id}\n                title_original={movie.original_title}\n                summary={movie.overview}\n                poster_path={movie.poster_path}\n                title_kr={movie.title}\n                vote_average={movie.vote_average}\n                vote_count={movie.vote_count}\n                genre_ids={movie.genre_ids}\n                release_date={movie.release_date}\n              />\n            ))}\n          </div>\n        )}\n      </body>\n    );\n  }\n}\n\nexport default Search;\n\nexport function getCurrentDate(separator = \"\") {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return `${year}${separator}${\n    month < 10 ? `0${month}` : `${month}`\n  }${separator}${date}`;\n}\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./routes/Detail\";\nimport \"./App.css\";\nimport Upcoming from \"./routes/Upcoming\";\nimport TopRateds from \"./routes/TopRateds\";\nimport Search from \"./routes/Search\";\n//npm run deploy\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/upcoming\" component={Upcoming} />\n      <Route path=\"/toprateds\" component={TopRateds} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}