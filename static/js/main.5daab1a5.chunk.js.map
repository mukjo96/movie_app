{"version":3,"sources":["res/cgv.png","res/lottecinema.png","res/megabox.png","res/logo512.png","routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","components/MovieDetail.js","routes/Detail.js","routes/Upcoming.js","routes/TopRateds.js","components/Searchbar.js","routes/Search.js","components/Cinema.js","routes/Theaters.js","components/Map.js","components/CinemaInfo.js","routes/Theater_Info.js","App.js","index.js"],"names":["module","exports","About","searchPlace","Movie","movie_id","title_kr","title_original","poster_path","vote_average","vote_count","genre_ids","release_date","summary","className","to","pathname","state","src","alt","title","substr","length","icon","faStar","Home","useState","currentPage","setCurrentPage","totalPage","setTotalPage","movies","setMovies","isLoading","setIsLoading","useEffect","getTopRated","a","axios","get","response","data","results","total_results","total","current","showPrevNextJumpers","style","marginTop","pageSize","onChange","page","map","movie","id","original_title","overview","Navigation","isOpen","text","handleClick","setState","open","event","console","log","target","value","logo","this","href","cgv","lottecinema","megabox","menuClicked","bind","width","height","color","position","React","Component","MovieDetail","key","genres","runtime","production_companies","production_countries","homepage","backdrop_path","backgroundImage","genre","index","name","faUser","country","s","company","logo_path","toImg","Detail","details","getMovieDetails","location","props","history","undefined","push","Upcoming","total_pages","TopRateds","Searchbar","onFormSubmit","e","preventDefault","onSubmit","type","placeholder","Search","onSearchSubmit","params","query","Cinema","theater_id","theater_name","theater_brand","theater_location","theater_location_detail","phone","place_url","road_address_name","x","y","la","lo","distance","setDistance","getDistance","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","dis","lat1","lng1","lat2","lng2","deg2rad","deg","Math","PI","dLat","dLon","sin","cos","c","atan2","sqrt","getDistanceFromLatLonInKm","String","floor","faMapMarkerAlt","Cinemas","Array","from","Theater_data","Theaters","theaterBrand","setTheaterBrand","theaterLocation","setTheaterLocation","theaterLocDetail","onClick","filter","cinema","LOCATION","THEATER_BRAND","idx","LOCATION_DETAIL","THEATER_NAME","kakao","window","Map","address","container","document","getElementById","options","center","maps","LatLng","level","geocoder","services","Geocoder","road_address","place_name","addressSearch","result","status","Status","OK","marker","Marker","InfoWindow","content","setCenter","CinemaInfo","Theater_Info","cinemas","getCinemaInfos","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5daab1a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cgv.f10c3a18.png\";","module.exports = __webpack_public_path__ + \"static/media/lottecinema.c31f6ef4.png\";","module.exports = __webpack_public_path__ + \"static/media/megabox.30c228ba.png\";","module.exports = __webpack_public_path__ + \"static/media/logo512.ca0697c0.png\";","import React, {useEffect} from \"react\";\nimport \"./About.css\";\nimport Theater_data from \"../json/Theater_data.json\"\n\n\n/* const { kakao } = window;\nconst Cinemas = Array.from(Theater_data) */\n\n\nconst About = ({ searchPlace }) => {\n  /* var a = []\n  var b = []\n  useEffect(() => {\n    \n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3,\n    };\n    const map = new kakao.maps.Map(container, options);\n\n    const ps = new kakao.maps.services.Places();\n\n    Cinemas.filter((cinema)=>(cinema.LOCATION===\"강원/제주\")).map((cinema) => ps.keywordSearch(cinema.THEATER_NAME, placesSearchCB));\n\n   function placesSearchCB (data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        let bounds = new kakao.maps.LatLngBounds();\n        a=data\n        for (let i = 0; i < 3; i++) {\n          b.push(data[i])\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n        console.log(b)\n\n        map.setBounds(bounds);\n      }\n    }\n\n    function displayMarker(place) {\n      let marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x),\n      });\n    }\n  }, [searchPlace]); */\n\nreturn (\n    <body>{/* <div id='myMap' style={{\n        width: '500px', \n        height: '500px'\n    }}></div> */}\n    <span>준비중..</span>\n    </body>\n);\n}\n\nexport default About;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Movie({\n  movie_id,\n  title_kr,\n  title_original,\n  poster_path,\n  vote_average,\n  vote_count,\n  genre_ids,\n  release_date,\n  summary,\n}) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: `/movie/${movie_id}`,\n          state: {\n            movie_id,\n            title_kr,\n            title_original,\n            poster_path,\n            vote_average,\n            vote_count,\n            genre_ids,\n            release_date,\n            summary,\n          },\n        }}\n      >\n        <div className=\"movieCard\">\n          <div className=\"movie-poster\">\n            <div>\n              <img\n                className=\"movieimg\"\n                src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\n                alt={title_original}\n                title={title_original}\n              />\n            </div>\n          </div>\n          <div className=\"mv-inf\">\n            <div className=\"mv-inf-top\">\n              <div className=\"mv-inf-title\">{title_kr}</div>\n            </div>\n            <div>\n              <hr />\n            </div>\n            <div className=\"mv-inf-btm\">\n              <div className=\"mv-inf-overview\">\n                {summary.substr(0, 70)}\n                {summary.length > 140 ? \"...\" : \"\"}\n              </div>\n              <div className=\"mv-inf-vote-avg\">\n                <FontAwesomeIcon className=\"star\" icon={faStar} />\n                {vote_average}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n/*\nMovie.propTypes = {\n  rnum: PropTypes.number.isRequired,\n  rank: PropTypes.number.isRequired,\n  rankInten: PropTypes.number.isRequired,\n  movieCd: PropTypes.number.isRequired,\n  movieNm: PropTypes.string.isRequired,\n  rankOldAndNew: PropTypes.string.isRequired,\n  audiAcc: PropTypes.number.isRequired,\n};\n*/\n\nexport default Movie;\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction findGenre(a) {\n  if (a === 28) {\n    return \"액션\";\n  } else if (a === 12) {\n    return \"모험\";\n  } else if (a === 16) {\n    return \"애니메이션\";\n  } else if (a === 35) {\n    return \"코미디\";\n  } else if (a === 80) {\n    return \"범죄\";\n  } else if (a === 99) {\n    return \"다큐멘터리\";\n  } else if (a === 18) {\n    return \"드라마\";\n  } else if (a === 10751) {\n    return \"가족\";\n  } else if (a === 14) {\n    return \"판타지\";\n  } else if (a === 6) {\n    return \"역사\";\n  } else if (a === 27) {\n    return \"공포\";\n  } else if (a === 10402) {\n    return \"음악\";\n  } else if (a === 9648) {\n    return \"미스터리\";\n  } else if (a === 10749) {\n    return \"로맨스\";\n  } else if (a === 878) {\n    return \"SF\";\n  } else if (a === 10770) {\n    return \"TV 영화\";\n  } else if (a === 53) {\n    return \"스릴러\";\n  } else if (a === 10752) {\n    return \"전쟁\";\n  } else if (a === 37) {\n    return \"서부\";\n  } else {\n    return \"\";\n  }\n}\n\nvar genres = [\n  {\n    id: 28,\n    name: \"액션\",\n  },\n  {\n    id: 12,\n    name: \"모험\",\n  },\n  {\n    id: 16,\n    name: \"애니메이션\",\n  },\n  {\n    id: 35,\n    name: \"코미디\",\n  },\n  {\n    id: 80,\n    name: \"범죄\",\n  },\n  {\n    id: 99,\n    name: \"다큐멘터리\",\n  },\n  {\n    id: 18,\n    name: \"드라마\",\n  },\n  {\n    id: 10751,\n    name: \"가족\",\n  },\n  {\n    id: 14,\n    name: \"판타지\",\n  },\n  {\n    id: 36,\n    name: \"역사\",\n  },\n  {\n    id: 27,\n    name: \"공포\",\n  },\n  {\n    id: 10402,\n    name: \"음악\",\n  },\n  {\n    id: 9648,\n    name: \"미스터리\",\n  },\n  {\n    id: 10749,\n    name: \"로맨스\",\n  },\n  {\n    id: 878,\n    name: \"SF\",\n  },\n  {\n    id: 10770,\n    name: \"TV 영화\",\n  },\n  {\n    id: 53,\n    name: \"스릴러\",\n  },\n  {\n    id: 10752,\n    name: \"전쟁\",\n  },\n  {\n    id: 37,\n    name: \"서부\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\n\nconst Home = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(20);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTopRated();\n  }, [currentPage]);\n\n  const getTopRated = async () => {\n    let response = await axios.get(\n      `https://api.themoviedb.org/3/movie/now_playing?sort_by=vote_average.desc&api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=${currentPage}&region=KR`\n    );\n\n    setMovies(response.data.results);\n    setIsLoading(false);\n    setTotalPage(response.data.total_results);\n  };\n\n  return (\n    <body className=\"container\">\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={totalPage}\n          current={currentPage}\n          showPrevNextJumpers={true}\n          style={{ marginTop: \"2%\" }}\n          pageSize={20}\n          onChange={(page) => setCurrentPage(page)}\n        />\n      </div>\n\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map((movie) => (\n            <Movie\n              movie_id={movie.id}\n              title_original={movie.original_title}\n              summary={movie.overview}\n              poster_path={movie.poster_path}\n              title_kr={movie.title}\n              vote_average={movie.vote_average}\n              vote_count={movie.vote_count}\n              genre_ids={movie.genre_ids}\n              release_date={movie.release_date}\n            />\n          ))}\n        </div>\n      )}\n    </body>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\nimport cgv from \"../res/cgv.png\";\nimport lottecinema from \"../res/lottecinema.png\";\nimport megabox from \"../res/megabox.png\";\nimport HamburgerMenu from \"react-hamburger-menu\";\nimport logo from \"../res/logo512.png\";\n\nclass Navigation extends React.Component {\n  state = {\n    isOpen: false,\n    text: \"\",\n  };\n  handleClick = () => this.setState({ open: !this.state.open });\n  onChange = (event) => {\n    console.log(event.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"nav\">\n        <nav className=\"navbar\">\n          <div className=\"navbar__logo\">\n            <img src={logo} />\n            <Link to=\"/\">Movie App</Link>\n          </div>\n          <ul\n            className={\"navbar__menu\" + (this.state.open ? \"show\" : \"hidden\")}\n          >\n            <li>\n              <Link to=\"/\">Now Playing</Link>\n            </li>\n            <li>\n              <Link to=\"/upcoming\">Up Coming</Link>\n            </li>\n            <li>\n              <Link to=\"/toprateds\">Top Rated</Link>\n            </li>\n            <li>\n              <Link to=\"/search\">Search</Link>\n            </li>\n            <li>\n              <Link to=\"/theaters\">Theaters</Link>\n            </li>\n            {/*  <li>\n                <a>\n                  <Link to=\"/about\">About</Link>\n                </a>\n              </li> */}\n          </ul>\n\n          <ul\n            className={\"navbar__icons\" + (this.state.open ? \"show\" : \"hidden\")}\n          >\n            <li>\n              <a href=\"https://www.cgv.co.kr\" target=\"_blank\">\n                <img src={cgv} />\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.lottecinema.co.kr\" target=\"_blank\">\n                <img src={lottecinema} />\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.megabox.co.kr\" target=\"_blank\">\n                <img src={megabox} />\n              </a>\n            </li>\n          </ul>\n          <section className=\"navbar__toogleBtn\">\n            <HamburgerMenu\n              isOpen={this.state.open}\n              menuClicked={this.handleClick.bind(this)}\n              width={18}\n              height={15}\n              color=\"white\"\n              position=\"absolute\"\n            />\n          </section>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./MovieDetail.css\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MovieDetail({\n  key,\n  title,\n  original_title,\n  genres,\n  poster_path,\n  release_date,\n  runtime,\n  vote_average,\n  vote_count,\n  production_companies,\n  production_countries,\n  overview,\n  homepage,\n  backdrop_path,\n}) {\n  return (\n    <div\n      className=\"movieDetail\"\n      style={{\n        backgroundImage: `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${backdrop_path})`,\n      }}\n    >\n      <div className=\"bg_filter\">\n        <img\n          src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\n          alt={original_title}\n          title={original_title}\n          className=\"poster\"\n        />\n        <div className=\"movieDetail__data\">\n          <div className=\"movieDetail__title\">\n            <a href={homepage}>\n              <h1>{title}</h1>\n            </a>\n            <h4>{original_title}</h4>\n          </div>\n          <ul className=\"movieDetail__genres\">\n            {genres.map((genre, index) => (\n              <li key={index} className=\"genres__genre\">\n                {genre.name}\n              </li>\n            ))}\n          </ul>\n          <div className=\"movieDetail__details\">\n            <h5 className=\"movieDetail__prdtYear\">개봉일자 : {release_date}</h5>\n            <h5>상영시간 : {runtime}분</h5>\n            <h5>\n              관객평점 : <FontAwesomeIcon className=\"star\" icon={faStar} />\n              {vote_average} ({\" \"}\n              <FontAwesomeIcon className=\"people\" icon={faUser} />\n              {\" \" + vote_count} )\n            </h5>\n            <ul className=\"movieDetail__nation\">\n              {production_countries.map((country, index) => (\n                <li key={index} className=\"countries__country\">\n                  <h5>{nationtoKR(country.name)}</h5>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"movieDetail__summary\">\n            <p>{overview}</p>\n          </div>\n          <div className=\"movieDetail__production\">\n            <h4>제작사</h4>\n            <ul className=\"movieDetail__companies\">\n              {production_companies.map((company, index) => (\n                <li key={index} className=\"companies__company\">\n                  {toImg(company)}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n/*\nMovie.propTypes = {\n  rnum: PropTypes.number.isRequired,\n  rank: PropTypes.number.isRequired,\n  rankInten: PropTypes.number.isRequired,\n  movieCd: PropTypes.number.isRequired,\n  movieNm: PropTypes.string.isRequired,\n  rankOldAndNew: PropTypes.string.isRequired,\n  audiAcc: PropTypes.number.isRequired,\n};\n*/\n\nexport default MovieDetail;\n\nfunction toImg(s) {\n  if (s.logo_path != null) {\n    return (\n      <img\n        src={\"https://image.tmdb.org/t/p/w500\" + s.logo_path}\n        alt={s.name}\n        title={s.name}\n      />\n    );\n  }\n}\n\nfunction nationtoKR(s) {\n  if (s === \"United States of America\") return \"미국\";\n  else if (s === \"China\") return \"중국\";\n  else if (s === \"Bulgaria\") return \"불가리아\";\n  else if (s === \"Estonia\") return \"에스토니아\";\n  else if (s === \"United Kingdom\") return \"영국\";\n  else if (s === \"Japan\") return \"일본\";\n  else if (s === \"Belgium\") return \"벨기에\";\n  else if (s === \"France\") return \"프랑스\";\n  else if (s === \"South Korea\") return \"한국\";\n  else if (s === \"Colombia\") return \"콜롬비아\";\n  else if (s === \"Netherlands\") return \"네덜란드\";\n  else if (s === \"Germany\") return \"독일\";\n  else return s;\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport MovieDetail from \"../components/MovieDetail\";\nimport \"./Detail.css\";\n\nclass Detail extends React.Component {\n  state = {\n    details: {},\n    isLoading: true,\n  };\n\n  getMovieDetails = async () => {\n    const { location } = this.props;\n    const { data } = await axios.get(\n      \"https://api.themoviedb.org/3/movie/\" +\n        location.state.movie_id +\n        \"?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR\"\n    );\n    this.setState({ details: data, isLoading: false });\n  };\n\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    } else {\n      this.getMovieDetails();\n    }\n  }\n\n  render() {\n    const { isLoading, details } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"details\">\n            <MovieDetail\n              key={details.id}\n              title={details.title} // 순위\n              original_title={details.original_title} // 순위 증감\n              release_date={details.release_date} // 제목\n              poster_path={details.poster_path}\n              runtime={details.runtime} // 신규 진입 여부\n              genres={details.genres}\n              production_countries={details.production_countries} // 영화 코드\n              vote_average={details.vote_average} // 관객 누적 수\n              vote_count={details.vote_count}\n              production_companies={details.production_companies}\n              overview={details.overview}\n              homepage={details.homepage}\n              backdrop_path={details.backdrop_path}\n            />\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Detail;\n","import React, { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\n\nconst Upcoming = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(20);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTopRated();\n  }, [currentPage]);\n\n  const getTopRated = async () => {\n    let response = await axios.get(\n      `https://api.themoviedb.org/3/movie/upcoming?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=${currentPage}&region=KR`\n    );\n\n    setMovies(response.data.results);\n    setIsLoading(false);\n    setTotalPage(response.data.total_results);\n    console.log(response.data.total_pages);\n  };\n\n  return (\n    <body className=\"container\">\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={totalPage}\n          current={currentPage}\n          showPrevNextJumpers={true}\n          style={{ marginTop: \"2%\" }}\n          pageSize={20}\n          onChange={(page) => setCurrentPage(page)}\n        />\n      </div>\n\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map((movie) => (\n            <Movie\n              movie_id={movie.id}\n              title_original={movie.original_title}\n              summary={movie.overview}\n              poster_path={movie.poster_path}\n              title_kr={movie.title}\n              vote_average={movie.vote_average}\n              vote_count={movie.vote_count}\n              genre_ids={movie.genre_ids}\n              release_date={movie.release_date}\n            />\n          ))}\n        </div>\n      )}\n    </body>\n  );\n};\n\nexport default Upcoming;\n","import React, { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\n\nconst TopRateds = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(20);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTopRated();\n  }, [currentPage]);\n\n  const getTopRated = async () => {\n    let response = await axios.get(\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=${currentPage}&region=KR`\n    );\n\n    setMovies(response.data.results);\n    setIsLoading(false);\n    setTotalPage(response.data.total_results);\n    console.log(response.data.total_pages);\n  };\n\n  return (\n    <body className=\"container\">\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={totalPage}\n          current={currentPage}\n          showPrevNextJumpers={true}\n          style={{ marginTop: \"2%\" }}\n          pageSize={20}\n          onChange={(page) => setCurrentPage(page)}\n        />\n      </div>\n\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map((movie) => (\n            <Movie\n              movie_id={movie.id}\n              title_original={movie.original_title}\n              summary={movie.overview}\n              poster_path={movie.poster_path}\n              title_kr={movie.title}\n              vote_average={movie.vote_average}\n              vote_count={movie.vote_count}\n              genre_ids={movie.genre_ids}\n              release_date={movie.release_date}\n            />\n          ))}\n        </div>\n      )}\n    </body>\n  );\n};\n\nexport default TopRateds;\n","import React, { Component } from \"react\";\nimport \"./Searchbar.css\";\n\nclass Searchbar extends Component {\n  state = { text: \"\" };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.text);\n  };\n\n  onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ text: value });\n  };\n\n  render() {\n    return (\n      <div className=\"searchbar\">\n        <form onSubmit={this.onFormSubmit}>\n          <input\n            className=\"search__input\"\n            value={this.state.text}\n            type=\"text\"\n            onChange={this.onChange}\n            placeholder=\"Search\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\nimport Searchbar from \"../components/Searchbar.js\";\nclass Search extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  onSearchSubmit = async (text) => {\n    const {\n      data: { results },\n    } = await axios.get(\n      `\n        https://api.themoviedb.org/3/search/movie?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=1&include_adult=false`,\n      { params: { query: text } }\n    );\n    this.setState({ movies: results, isLoading: false });\n  };\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <body className=\"container\">\n        <Searchbar onSubmit={this.onSearchSubmit} />\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">검색어를 입력하세요.</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                movie_id={movie.id}\n                title_original={movie.original_title}\n                summary={movie.overview}\n                poster_path={movie.poster_path}\n                title_kr={movie.title}\n                vote_average={movie.vote_average}\n                vote_count={movie.vote_count}\n                genre_ids={movie.genre_ids}\n                release_date={movie.release_date}\n              />\n            ))}\n          </div>\n        )}\n      </body>\n    );\n  }\n}\n\nexport default Search;\n\nexport function getCurrentDate(separator = \"\") {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return `${year}${separator}${\n    month < 10 ? `0${month}` : `${month}`\n  }${separator}${date}`;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMapMarker,\n  faMapMarkerAlt,\n  faPhone,\n  faStar,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Cinema.css\";\nfunction Cinema({\n  theater_id,\n  theater_name,\n  theater_brand,\n  theater_location,\n  theater_location_detail,\n  vote_average,\n  phone,\n  place_url,\n  road_address_name,\n  id,\n  x,\n  y,\n  la,\n  lo,\n}) {\n  const [distance, setDistance] = useState(\"-1\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getDistance();\n    setIsLoading(false);\n  }, []);\n\n  const getDistance = () => {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다.\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n        la = lat;\n        lo = lon;\n\n        var dis = getDistanceFromLatLonInKm(la, lo, y, x);\n        if (dis > 1) {\n          setDistance(String(Math.floor(dis)) + \" k\");\n        } else {\n          setDistance(String(Math.floor(dis * 1000)) + \" \");\n        }\n      });\n    } else {\n    }\n  };\n\n  function getDistanceFromLatLonInKm(lat1, lng1, lat2, lng2) {\n    function deg2rad(deg) {\n      return deg * (Math.PI / 180);\n    }\n    var R = 6371; // Radius of the earth in km\n    var dLat = deg2rad(lat2 - lat1); // deg2rad below\n    var dLon = deg2rad(lng2 - lng1);\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(deg2rad(lat1)) *\n        Math.cos(deg2rad(lat2)) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n    return d;\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"cinema\">\n          <Link\n            to={{\n              pathname: `/theaterinfo/${theater_id}`,\n              state: {\n                theater_id,\n                theater_name,\n                theater_brand,\n                theater_location,\n                theater_location_detail,\n                vote_average,\n                phone,\n                place_url,\n                road_address_name,\n                id,\n                x,\n                y,\n                distance,\n              },\n            }}\n          >\n            <div className=\"cinemaCard\">\n              {/* <div className=\"brand-poster\">\n              <div>\n                <img\n                  className=\"movieimg\"\n                  src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\n                  alt={title_original}\n                  title={title_original}\n                />\n              </div>\n            </div> */}\n              <div className=\"cinema-inf\">\n                <div className=\"cinema-inf-top\">\n                  <div className=\"cinema-inf-title\">{theater_name}</div>\n                </div>\n                <div>\n                  <hr className=\"middle_line\" />\n                </div>\n                <div className=\"cinema-inf-btm\">\n                  <div className=\"cinema-inf-overview\">\n                    {road_address_name}\n                    <div className=\"phonenum\">\n                      <FontAwesomeIcon\n                        className=\"mapmarker\"\n                        icon={faMapMarkerAlt}\n                      />\n                      {distance !== \"-1\" ? `${distance}m` : \". . .\"}\n                    </div>\n                  </div>\n                  <div className=\"cinema-inf-vote-avg\">\n                    <FontAwesomeIcon className=\"star\" icon={faStar} />\n                    {vote_average}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Cinema;\n","import React, { useEffect, useState } from \"react\";\nimport Theater_data from \"../json/Theater_data.json\";\nimport Cinema from \"../components/Cinema\";\nimport \"./Theaters.css\";\n\nconst Cinemas = Array.from(Theater_data);\n\nconst Theaters = () => {\n  const [theaterBrand, setTheaterBrand] = useState(\"전체\");\n  const [theaterLocation, setTheaterLocation] = useState(\"전체\");\n\n  var theaterLocDetail = \"\";\n  const setLocDetail = (value) => {\n    theaterLocDetail = value;\n  };\n\n  const locationList = [\n    \"전체\",\n    \"서울\",\n    \"부산\",\n    \"경기/인천\",\n    \"충청/대전\",\n    \"경북/대구\",\n    \"경남/울산\",\n    \"전라/광주\",\n    \"강원/제주\",\n  ];\n\n  return (\n    <div className=\"containers\">\n      <div className=\"checklist\">\n        <ul className=\"brand_name\">\n          <li>\n            <button\n              className={\n                \"btnbr\" + (theaterBrand === \"전체\" ? \"active\" : \"default\")\n              }\n              onClick={() => setTheaterBrand(\"전체\")}\n            >\n              전체\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                \"btnbr\" + (theaterBrand === \"CGV\" ? \"active\" : \"default\")\n              }\n              onClick={() => setTheaterBrand(\"CGV\")}\n            >\n              CGV\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                \"btnbr\" + (theaterBrand === \"롯데시네마\" ? \"active\" : \"default\")\n              }\n              onClick={() => setTheaterBrand(\"롯데시네마\")}\n            >\n              롯데시네마\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                \"btnbr\" + (theaterBrand === \"메가박스\" ? \"active\" : \"default\")\n              }\n              onClick={() => setTheaterBrand(\"메가박스\")}\n            >\n              메가박스\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                \"btnbr\" + (theaterBrand === \"기타\" ? \"active\" : \"default\")\n              }\n              onClick={() => setTheaterBrand(\"기타\")}\n            >\n              기타\n            </button>\n          </li>\n        </ul>\n        <ul className=\"location_name\">\n          {locationList.map((name) => (\n            <li key={name}>\n              <button\n                className={\n                  \"btnloc\" +\n                  (theaterLocation === `${name}` ? \"active\" : \"default\")\n                }\n                onClick={() => setTheaterLocation(`${name}`)}\n              >\n                {name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        {Cinemas.filter((cinema) => {\n          if (theaterBrand === \"전체\" && theaterLocation === \"전체\") {\n            return true;\n          } else if (theaterBrand === \"전체\") {\n            return theaterLocation === cinema.LOCATION;\n          } else if (theaterLocation === \"전체\") {\n            return theaterBrand === cinema.THEATER_BRAND;\n          } else {\n            return (\n              theaterBrand === cinema.THEATER_BRAND &&\n              theaterLocation === cinema.LOCATION\n            );\n          }\n        }).map((cinema) => (\n          <div key={cinema.idx}>\n            {cinema.LOCATION_DETAIL !== theaterLocDetail ? (\n              <a className=\"detail_block\">{cinema.LOCATION_DETAIL}</a>\n            ) : null}\n            {setLocDetail(cinema.LOCATION_DETAIL)}\n            <div className=\"cinemas\">\n              <Cinema\n                theater_id={cinema.idx}\n                theater_name={cinema.THEATER_NAME}\n                theater_brand={cinema.THEATER_BRAND}\n                theater_location={cinema.LOCATION}\n                theater_location_detail={cinema.LOCATION_DETAIL}\n                vote_average={0}\n                phone={cinema.phone}\n                id={cinema.id}\n                x={cinema.x}\n                y={cinema.y}\n                place_url={cinema.place_url}\n                road_address_name={cinema.road_address_name}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Theaters;\n","import React, { useEffect } from \"react\";\n\nconst { kakao } = window;\n\nconst Map = ({ address, name }) => {\n  useEffect(() => {\n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3,\n    };\n    const map = new kakao.maps.Map(container, options);\n\n    const geocoder = new kakao.maps.services.Geocoder();\n\n    const road_address = address;\n    const place_name = name;\n\n    geocoder.addressSearch(road_address, function (result, status) {\n      // 정상적으로 검색이 완료됐으면\n      if (status === kakao.maps.services.Status.OK) {\n        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n        // 결과값으로 받은 위치를 마커로 표시합니다\n        var marker = new kakao.maps.Marker({\n          map: map,\n          position: coords,\n        });\n\n        // 인포윈도우로 장소에 대한 설명을 표시합니다\n        var infowindow = new kakao.maps.InfoWindow({\n          content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${place_name}</div>`,\n        });\n        infowindow.open(map, marker);\n\n        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n        map.setCenter(coords);\n      }\n    });\n  }, []);\n\n  return (\n    <div\n      id=\"myMap\"\n      style={{\n        width: \"100%\",\n        height: \"400px\",\n      }}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState } from \"react\";\nimport \"./CinemaInfo.css\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport cgv from \"../res/cgv.png\";\nimport lottecinema from \"../res/lottecinema.png\";\nimport megabox from \"../res/megabox.png\";\nimport Map from \"./Map\";\n\nfunction CinemaInfo({\n  theater_id,\n  theater_name,\n  theater_brand,\n  theater_location,\n  theater_location_detail,\n  vote_average,\n  phone,\n  place_url,\n  road_address_name,\n  id,\n  x,\n  y,\n  distance,\n}) {\n  return (\n    <div\n      className=\"cinemaInfo\"\n      /* style={{\n        backgroundImage: `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${backdrop_path})`,\n      }} */\n    >\n      <div className=\"bg_filter\">\n        {theater_brand === \"CGV\" ? (\n          <img\n            src={cgv}\n            alt={theater_brand}\n            title={theater_brand}\n            className=\"brand_logo\"\n          />\n        ) : null}\n        {theater_brand === \"롯데시네마\" ? (\n          <img\n            src={lottecinema}\n            alt={theater_brand}\n            title={theater_brand}\n            className=\"brand_logo\"\n          />\n        ) : null}\n        {theater_brand === \"메가박스\" ? (\n          <img\n            src={megabox}\n            alt={theater_brand}\n            title={theater_brand}\n            className=\"brand_logo\"\n          />\n        ) : null}\n        <div className=\"cinemaInfo__data\">\n          <div className=\"cinemaInfo__title\">\n            <a>\n              <h1>{theater_name}</h1>\n            </a>\n          </div>\n          <div className=\"cinemaInfo__brand\">\n            <h4>{theater_brand}</h4>\n          </div>\n          <div className=\"cinemaInfo__details\">\n            <h5 className=\"cinemaInfo__address\">{road_address_name}</h5>\n            <h5 className=\"cinemaInfo__phone\">{phone}</h5>\n\n            <h5>\n              평점 : <FontAwesomeIcon className=\"star\" icon={faStar} />\n              {vote_average}{\" \"}\n              {/* ({\" \"}\n              <FontAwesomeIcon className=\"people\" icon={faUser} />\n              {\" \" + vote_count} ) */}\n            </h5>\n            {distance ? (\n              <h5>현재 위치에서 {distance}m 떨어져 있습니다.</h5>\n            ) : null}\n            <div className=\"cinemaInfo__kakaomap\">\n              <a className=\"cinemaInfo__url\" href={place_url} target=\"_blank\">\n                상세페이지\n              </a>\n              <a> </a>\n              <a href={`https://map.kakao.com/link/to/${id}`} target=\"_blank\">\n                길찾기\n              </a>\n              <div className=\"cinemaInfo__map\">\n                <Map address={road_address_name} name={theater_name} />\n              </div>\n            </div>\n            {/* <ul className=\"cinemaInfo__nation\">\n              {production_countries.map((country, index) => (\n                <li key={index} className=\"countries__country\">\n                  <h5>{nationtoKR(country.name)}</h5>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"cinemaInfo__summary\">\n            <p>{overview}</p>\n          </div>\n          <div className=\"cinemaInfo__production\">\n            <h4>제작사</h4>\n            <ul className=\"cinemaInfo__companies\">\n              {production_companies.map((company, index) => (\n                <li key={index} className=\"companies__company\">\n                  {toImg(company)}\n                </li>\n              ))}\n            </ul> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n/*\nMovie.propTypes = {\n  rnum: PropTypes.number.isRequired,\n  rank: PropTypes.number.isRequired,\n  rankInten: PropTypes.number.isRequired,\n  movieCd: PropTypes.number.isRequired,\n  movieNm: PropTypes.string.isRequired,\n  rankOldAndNew: PropTypes.string.isRequired,\n  audiAcc: PropTypes.number.isRequired,\n};\n*/\n\nexport default CinemaInfo;\n","import React from \"react\";\nimport CinemaInfo from \"../components/CinemaInfo\";\nimport \"./Detail.css\";\n\nconst { kakao } = window;\n\nclass Theater_Info extends React.Component {\n  state = {\n    cinemas: {},\n    isLoading: true,\n  };\n\n  getCinemaInfos = () => {\n    const { location } = this.props;\n    this.setState({ cinemas: location.state, isLoading: false });\n  };\n\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    } else {\n      this.getCinemaInfos();\n    }\n  }\n\n  render() {\n    const { isLoading, cinemas } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"cinemas\">\n            <CinemaInfo\n              key={cinemas.theater_id}\n              theater_name={cinemas.theater_name}\n              theater_brand={cinemas.theater_brand}\n              theater_location={cinemas.theater_location}\n              theater_location_detail={cinemas.theater_location_detail}\n              vote_average={cinemas.vote_average}\n              phone={cinemas.phone}\n              place_url={cinemas.place_url}\n              road_address_name={cinemas.road_address_name}\n              id={cinemas.id}\n              x={cinemas.x}\n              y={cinemas.y}\n              distance={cinemas.distance}\n            />\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Theater_Info;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./routes/Detail\";\nimport \"./App.css\";\nimport Upcoming from \"./routes/Upcoming\";\nimport TopRateds from \"./routes/TopRateds\";\nimport Search from \"./routes/Search\";\nimport Theaters from \"./routes/Theaters\"\nimport Theater_Info from \"./routes/Theater_Info\";\n\n//npm run deploy\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/upcoming\" component={Upcoming} />\n      <Route path=\"/toprateds\" component={TopRateds} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/theaters\" component={Theaters} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/theaterinfo/:id\" component={Theater_Info} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}