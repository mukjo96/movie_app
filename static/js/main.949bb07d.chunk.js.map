{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","components/MovieDetail.js","routes/Detail.js","App.js","index.js"],"names":["About","className","Movie","movie_id","title_kr","title_original","poster_path","vote_average","vote_count","genre_ids","release_date","summary","to","pathname","state","src","alt","title","map","genre","index","key","a","slice","length","Home","isLoading","movies","getMovies","axios","get","results","data","setState","this","movie","id","original_title","overview","React","Component","Navigation","MovieDetail","genres","runtime","production_companies","production_countries","homepage","href","name","country","company","classNam","s","logo_path","toImg","Detail","details","getMovieDetails","location","props","history","undefined","push","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.949bb07d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./About.css\";\n\nfunction About() {\n  return (\n    <div className=\"about__container\">\n      <span>\"About...\"</span>\n      <span>Me</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({\n  movie_id,\n  title_kr,\n  title_original,\n  poster_path,\n  vote_average,\n  vote_count,\n  genre_ids,\n  release_date,\n  summary,\n}) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: `/movie/${movie_id}`,\n          state: {\n            movie_id,\n            title_kr,\n            title_original,\n            poster_path,\n            vote_average,\n            vote_count,\n            genre_ids,\n            release_date,\n            summary,\n          },\n        }}\n      >\n        <img\n          src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\n          alt={title_original}\n          title={title_original}\n        />\n        <div className=\"movie__data\">\n          <div className=\"movie__title\">\n            <h3>{title_kr}</h3>\n            <h5>{title_original}</h5>\n          </div>\n          <h5 className=\"movie__year\">{release_date}</h5>\n          <h5 className=\"movie__vote\">{vote_average}/10.0</h5>\n          <ul className=\"movie__genres\">\n            {genre_ids.map((genre, index) => (\n              <li key={index} className=\"genres__genre\">\n                {findGenre(genre)}\n              </li>\n            ))}\n          </ul>\n          <p className=\"movie__summary\">\n            {summary.slice(0, 140)}\n            {summary.length > 140 ? \"...\" : \"\"}\n          </p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n/*\nMovie.propTypes = {\n  rnum: PropTypes.number.isRequired,\n  rank: PropTypes.number.isRequired,\n  rankInten: PropTypes.number.isRequired,\n  movieCd: PropTypes.number.isRequired,\n  movieNm: PropTypes.string.isRequired,\n  rankOldAndNew: PropTypes.string.isRequired,\n  audiAcc: PropTypes.number.isRequired,\n};\n*/\n\nexport default Movie;\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction findGenre(a) {\n  if (a === 28) {\n    return \"액션\";\n  } else if (a === 12) {\n    return \"모험\";\n  } else if (a === 16) {\n    return \"애니메이션\";\n  } else if (a === 35) {\n    return \"코미디\";\n  } else if (a === 80) {\n    return \"범죄\";\n  } else if (a === 99) {\n    return \"다큐멘터리\";\n  } else if (a === 18) {\n    return \"드라마\";\n  } else if (a === 10751) {\n    return \"가족\";\n  } else if (a === 14) {\n    return \"판타지\";\n  } else if (a === 6) {\n    return \"역사\";\n  } else if (a === 27) {\n    return \"공포\";\n  } else if (a === 10402) {\n    return \"음악\";\n  } else if (a === 9648) {\n    return \"미스터리\";\n  } else if (a === 10749) {\n    return \"로맨스\";\n  } else if (a === 878) {\n    return \"SF\";\n  } else if (a === 10770) {\n    return \"TV 영화\";\n  } else if (a === 53) {\n    return \"스릴러\";\n  } else if (a === 10752) {\n    return \"전쟁\";\n  } else if (a === 37) {\n    return \"서부\";\n  } else {\n    return \"\";\n  }\n}\n\nvar genres = [\n  {\n    id: 28,\n    name: \"액션\",\n  },\n  {\n    id: 12,\n    name: \"모험\",\n  },\n  {\n    id: 16,\n    name: \"애니메이션\",\n  },\n  {\n    id: 35,\n    name: \"코미디\",\n  },\n  {\n    id: 80,\n    name: \"범죄\",\n  },\n  {\n    id: 99,\n    name: \"다큐멘터리\",\n  },\n  {\n    id: 18,\n    name: \"드라마\",\n  },\n  {\n    id: 10751,\n    name: \"가족\",\n  },\n  {\n    id: 14,\n    name: \"판타지\",\n  },\n  {\n    id: 36,\n    name: \"역사\",\n  },\n  {\n    id: 27,\n    name: \"공포\",\n  },\n  {\n    id: 10402,\n    name: \"음악\",\n  },\n  {\n    id: 9648,\n    name: \"미스터리\",\n  },\n  {\n    id: 10749,\n    name: \"로맨스\",\n  },\n  {\n    id: 878,\n    name: \"SF\",\n  },\n  {\n    id: 10770,\n    name: \"TV 영화\",\n  },\n  {\n    id: 53,\n    name: \"스릴러\",\n  },\n  {\n    id: 10752,\n    name: \"전쟁\",\n  },\n  {\n    id: 37,\n    name: \"서부\",\n  },\n];\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: { results },\n    } = await axios.get(\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR&page=1`\n    );\n    this.setState({ movies: results, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <body className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                movie_id={movie.id}\n                title_original={movie.original_title}\n                summary={movie.overview}\n                poster_path={movie.poster_path}\n                title_kr={movie.title}\n                vote_average={movie.vote_average}\n                vote_count={movie.vote_count}\n                genre_ids={movie.genre_ids}\n                release_date={movie.release_date}\n              />\n            ))}\n          </div>\n        )}\n      </body>\n    );\n  }\n}\n\nexport default Home;\n\nexport function getCurrentDate(separator = \"\") {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return `${year}${separator}${\n    month < 10 ? `0${month}` : `${month}`\n  }${separator}${date}`;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./MovieDetail.css\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction MovieDetail({\n  key,\n  title,\n  original_title,\n  genres,\n  poster_path,\n  release_date,\n  runtime,\n  vote_average,\n  vote_count,\n  production_companies,\n  production_countries,\n  overview,\n  homepage,\n}) {\n  return (\n    <body className=\"movieDetail\">\n      <img\n        src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\n        alt={original_title}\n        title={original_title}\n      />\n      <div className=\"movieDetail__data\">\n        <div className=\"movieDetail__title\">\n          <a href={homepage}>\n            <h1>{title}</h1>\n          </a>\n          <h4>{original_title}</h4>\n        </div>\n        <ul className=\"movieDetail__genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres__genre\">\n              {genre.name}\n            </li>\n          ))}\n        </ul>\n        <div className=\"movieDetail__details\">\n          <h4 className=\"movieDetail__prdtYear\">개봉일자 : {release_date}</h4>\n          <h5>상영시간 : {runtime}분</h5>\n          <h5>\n            관객평점 : {vote_average} ({vote_count}명)\n          </h5>\n          <ul className=\"movieDetail__nation\">\n            {production_countries.map((country, index) => (\n              <li key={index} className=\"countries__country\">\n                {country.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"movieDetail__summary\">\n          <p>{overview}</p>\n        </div>\n        <div>\n          <h4>제작사</h4>\n          <ul className=\"movieDetail__companies\">\n            {production_companies.map((company, index) => (\n              <li key={index} classNam=\"companies__company\">\n                {toImg(company)}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </body>\n  );\n}\n/*\nMovie.propTypes = {\n  rnum: PropTypes.number.isRequired,\n  rank: PropTypes.number.isRequired,\n  rankInten: PropTypes.number.isRequired,\n  movieCd: PropTypes.number.isRequired,\n  movieNm: PropTypes.string.isRequired,\n  rankOldAndNew: PropTypes.string.isRequired,\n  audiAcc: PropTypes.number.isRequired,\n};\n*/\n\nexport default MovieDetail;\n\nfunction toImg(s) {\n  if (s.logo_path != null) {\n    return (\n      <img\n        src={\"https://image.tmdb.org/t/p/w500\" + s.logo_path}\n        alt={s.name}\n        title={s.name}\n      />\n    );\n  }\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport MovieDetail from \"../components/MovieDetail\";\n\nclass Detail extends React.Component {\n  state = {\n    details: {},\n    isLoading: true,\n  };\n\n  getMovieDetails = async () => {\n    const { location } = this.props;\n    const { data } = await axios.get(\n      \"https://api.themoviedb.org/3/movie/\" +\n        location.state.movie_id +\n        \"?api_key=cfaaa8c5177462f54ee54a30c746dca3&language=ko-KR\"\n    );\n    this.setState({ details: data, isLoading: false });\n  };\n\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    } else {\n      this.getMovieDetails();\n    }\n  }\n\n  render() {\n    const { isLoading, details } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"details\">\n            <MovieDetail\n              key={details.id}\n              title={details.title} // 순위\n              original_title={details.original_title} // 순위 증감\n              release_date={details.release_date} // 제목\n              poster_path={details.poster_path}\n              runtime={details.runtime} // 신규 진입 여부\n              genres={details.genres}\n              production_countries={details.production_countries} // 영화 코드\n              vote_average={details.vote_average} // 관객 누적 수\n              vote_count={details.vote_count}\n              production_companies={details.production_companies}\n              overview={details.overview}\n              homepage={details.homepage}\n            />\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./routes/Detail\";\nimport \"./App.css\";\n//npm run deploy\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}